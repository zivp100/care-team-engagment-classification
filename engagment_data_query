
WITH data AS MATERIALIZED (
  SELECT 
    pv.pathway_id
    , pv.user_id
    , u.uuid
    , acceptance_date
    , first_et
    , date_part('days',first_et - acceptance_date) AS days_to_onboard
    , transferred_to_coach_at
    , split_part(pv.program_indication_identifier,'_',2) AS indication
    , CASE 
        WHEN u.gender IN ('female','Female','F','f') THEN 1 ELSE 0 
      END as is_gender_female
    , CASE 
        WHEN u.gender IN ('male','Male','M','m') THEN 1 ELSE 0 
      END as is_gender_male
    , CASE 
        WHEN u.gender NOT IN ('female','Female','F','f','male','Male','M','m') THEN 1 ELSE 0 
      END as is_gender_other
    , FLOOR(DATE_PART('days', NOW() - u.date_of_birth)/365) AS user_age_years
    , o2.gad
    , o3.phq
    , CASE WHEN o1.surgery_chance_next_year IS NULL THEN 0 ELSE o1.surgery_chance_next_year END AS surgery_1yr
    , MAX(CASE WHEN saa.question_key = 'painSeverity' THEN value ELSE NULL END) AS pain_severity
    , MAX(CASE WHEN saa.question_key = 'vasPain' THEN value ELSE NULL END) AS pain_vas
    , MAX(LENGTH(CASE WHEN saa.question_key = 'painDescription' THEN value ELSE '' END)) AS pain_description_length
    , (MAX(CASE WHEN saa.question_key = 'weight' THEN value::int ELSE 0 END) * 0.453592) /
      NULLIF(((MAX(CASE WHEN saa.question_key = 'heightFt' THEN value::int ELSE 0 END) * 12 
        + MAX(CASE WHEN saa.question_key = 'heightIn' THEN value::int ELSE 0 END)) / 39.3701)^2,0) AS BMI
    , MAX(LENGTH(u.bio)) AS bio_length
    --, MAX(u.occupation) as occupation -- ZP
    , MAX(LENGTH(u.coaching_questions ->> 'key_reasons')) AS reasons_length
    , MAX(LENGTH(u.coaching_questions ->> 'imagine_free')) AS imagine_free_length
    , MAX(CASE WHEN u.coaching_questions ->> 'foresee_barriers' ilike '%limited-time%' THEN 1 ELSE 0 END) AS reason_limited_time
    , MAX(CASE WHEN u.coaching_questions ->> 'foresee_barriers' ilike '%family%' THEN 1 ELSE 0 END) AS reason_family_obligations
    , MAX(CASE WHEN u.coaching_questions ->> 'foresee_barriers' ilike '%work%' THEN 1 ELSE 0 END) AS reason_work_obligations
    , MAX(CASE WHEN u.coaching_questions ->> 'foresee_barriers' ilike '%other%' THEN 1 ELSE 0 END) AS reason_other

  FROM public.pathways_view pv 
       LEFT JOIN public.users u 
        ON pv.user_id = u.id 
       LEFT JOIN onboarding.application oa 
        ON u.uuid = oa.user_uuid 
          LEFT JOIN onboarding.survey su 
            ON oa.id = su.application_id 
          LEFT JOIN onboarding.survey_answer saa 
            ON su.id = saa.survey_id 
          LEFT JOIN onboarding.question_label ql 
            ON saa.question_label_id = ql.id
      JOIN public.screenings s
        ON pv.pathway_id = s.pathway_id
        AND s.relevance IN (2,3)
      JOIN (
        SELECT 
          se.screening_id, 
          MIN(se.created_at) AS acceptance_date
        FROM public.screening_events se
        WHERE event_name = 'user_added_to_team'
          AND created_at >= '2022-01-01'
        GROUP BY 1
        ) e
        ON e.screening_id = s.id
      JOIN public.pathways p 
        ON pv.pathway_id = p.id
        AND p.state <> 'canceled'
      JOIN public.users_view uv
        ON u.id = uv.user_id 
        AND paying_user_flag is true 
        AND team_status != 'never_on_team'
      LEFT JOIN rollups.report_obligations o1
        ON o1.pathway_id = pv.pathway_id
        AND o1.week_index = -1
        AND o1.report_type = 'surgery_likelihood_v2'
      LEFT JOIN rollups.report_obligations o2
        ON o2.pathway_id = pv.pathway_id
        AND o2.week_index = -1
        AND o2.report_type = 'gad'
      LEFT JOIN rollups.report_obligations o3
        ON o3.pathway_id = pv.pathway_id
        AND o3.week_index = -1
        AND o3.report_type = 'phq'
     
  WHERE 
    split_part(pv.program_indication_identifier,'_',1) = 'chronic'
    AND e.acceptance_date >= '2022-02-15'
    AND u.profile_completed_at >= '2022-02-01' --Filter to New Users to avoid legacy data quality issues
    AND oa.user_uuid IS NOT NULL
    AND pv.first_et BETWEEN '2022-02-15' AND NOW() - interval '4 weeks' --4 weeks of tenure 
  GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
),

coach AS (
  SELECT 
    d.user_id,
    MIN(starts_at) AS starts_at
  FROM data d
    JOIN public.coach_coverages cc
      ON d.user_id = cc.user_id
      AND cc.starts_at >= d.acceptance_date
    JOIN public.admins a 
      ON cc.admin_id = a.id
    JOIN public.admins_roles r 
      ON a.id = r.admin_id 
      AND r.role_id = 2 --Coach Role Id (7 = Onboarding Specialist)
    
  WHERE
    TYPE = 'Primary' --Denotes Coach or OS
    --AND cc.active = true --Users may switch coaches for various reason - make sure to include the "active" tag. 
  GROUP BY 1
),

inbound_messages AS (
  SELECT 
      d.pathway_id,
      SUM(CASE WHEN m.transmitted_at >= c.starts_at AND m.transmitted_at < first_et + interval '4 weeks' THEN 1 ELSE 0 END) as inbound_coach_messages_all,
      SUM(CASE WHEN m.transmitted_at >= c.starts_at AND m.transmitted_at < first_et + interval '4 weeks' AND LENGTH(m.body) > 5 THEN 1 ELSE 0 END) as inbound_coach_messages, -- ZP
      SUM(CASE WHEN m.transmitted_at >= acceptance_date AND m.transmitted_at < transferred_to_coach_at  AND LENGTH(m.body) > 5 THEN 1 ELSE 0 END) as inbound_coach_messages_1_week, -- ZP
      SUM(CASE WHEN m.transmitted_at >= acceptance_date AND (m.transmitted_at < c.starts_at OR c.starts_at IS NULL) THEN 1 ELSE 0 END) as inbound_os_messages_all,
      SUM(CASE WHEN m.transmitted_at >= acceptance_date AND (m.transmitted_at < c.starts_at OR c.starts_at IS NULL) AND LENGTH(m.body) > 5 THEN 1 ELSE 0 END) as inbound_os_messages, -- ZP
      
      SUM(LENGTH(m.body)) as length_messages, --ZP
      
      SUM(CASE WHEN m.body like '%surgery%' THEN 1 ELSE 0 END) surgery_message,  --ZP
      SUM(CASE WHEN m.body like '%call%' THEN 1 ELSE 0 END) call_message,
      SUM(CASE WHEN m.body like '%interaction%' THEN 1 ELSE 0 END) interaction_message,
      
      
      
      SUM(CASE WHEN m.body like '%other%' THEN 1 ELSE 0 END) AS reason_other
      
  FROM rollups.messages m 
    JOIN data d 
      ON m.user_id = d.user_id
      AND message_direction = 'from_user'
      AND m.transmitted_at >= d. acceptance_date
    LEFT JOIN coach c 
      ON m.user_id = c.user_id
  GROUP BY 1
),

retention AS (
   SELECT 
    d.pathway_id,
    1.0*COUNT(1)/4 AS ets_per_week,
    MAX(CASE WHEN ea.activity_timestamp BETWEEN first_et + interval '22 days' AND first_et + interval '28 days' THEN 1 ELSE 0 END) AS week_4_retained
  FROM data d
    JOIN rollups.engagement_activities ea
      ON d.pathway_id = ea.pathway_id
      AND activity_completed = true
      AND engagement_type = 'et_session'
      AND ea.activity_timestamp BETWEEN first_et AND first_et + interval '4 weeks'
  GROUP BY 1
)

SELECT 
  d.*,
  COALESCE(inbound_os_messages_all,0) AS inbound_os_messages_all,
  COALESCE(inbound_os_messages,0) AS inbound_os_messages,
  COALESCE(inbound_coach_messages_all,0) AS inbound_coach_messages_all,
  COALESCE(inbound_coach_messages_1_week,0) AS inbound_coach_messages_1_week,
  COALESCE(inbound_coach_messages,0) AS inbound_coach_messages,
  COALESCE(r.ets_per_week,0) AS ets_per_week_4_wk,
  COALESCE(week_4_retained,0) AS week_4_retained,
  COALESCE(length_messages,0) AS length_messages, --ZP
  COALESCE(surgery_message,0) AS surgery_message, --ZP
  COALESCE(call_message,0) AS call_message, --ZP
  COALESCE(interaction_message,0) AS interaction_message, --ZP
  
  CASE
    WHEN inbound_coach_messages >= 6 AND ets_per_week >= 1 THEN 'engaged_responsive'
    WHEN inbound_coach_messages >= 6 AND COALESCE(ets_per_week,0) < 1 THEN 'unengaged_responsive'
    WHEN COALESCE(inbound_coach_messages,0) < 6 AND ets_per_week >= 1 THEN 'engaged_unresponsive'
    WHEN COALESCE(inbound_coach_messages,0) < 6 AND COALESCE(ets_per_week,0) < 1 THEN 'unengaged_unresponsive'
  END as cluster
FROM data d 
     LEFT JOIN inbound_messages im
      ON d.pathway_id = im.pathway_id 
     LEFT JOIN retention r 
      ON d.pathway_id = r.pathway_id


